\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{zslide}





% ----------------------------------------------------------------------
%                            package Option 
% ----------------------------------------------------------------------
\RequirePackage{expl3}
\RequirePackage {l3keys2e}
\ExplSyntaxOn
% key-value alias
\cs_new_protected:Npn \zslide_define_option:n
  { \keys_define:nn { zslide / option } }
\cs_new_protected:Npn \zslide_define:nn #1
  { \keys_define:nn { zslide / #1} }
\cs_new_protected:Npn \zslide_set:nn #1
  { \keys_set:nn { zslide / #1 } }
\cs_new_protected:Npn \zslide_load_after:n #1
  { \AtBeginDocument {#1} }

% process key
\zslide_define_option:n {
  lang          .tl_set:N   = \g__zslide_lang_str,
  lang          .initial:n  = en,
  minted        .bool_set:N = \g__zslide_minted_bool,
  minted        .initial:n  = false,
  math-alias    .bool_set:N = \g__zslide_math_alias_bool,
  math-alias    .initial:n  = false,
  Math-envStyle .tl_set:N   = \g__zslide_math_env_style_tl,
  Math-envStyle .initial:n  = plain,
  serif         .choice:,
  serif / all   .code:n     = { \usefonttheme{serif} },
  serif / math  .code:n     = { \usefonttheme[onlymath]{serif} },
}
\ProcessKeysOptions { zslide / option }





% ----------------------------------------------------------------------
%                             language 
% ----------------------------------------------------------------------
\msg_new:nnn {zslide}{compile-engine-pdftex}{Current~compile~engine~is~XETEX,~use~PDFTEX~instead.}
\msg_new:nnn {zslide}{compile-engine-xetex }{Current~compile~engine~is~PDFTEX,~use~XETEX~instead.}
\str_case:VnF \g__zslide_lang_str {
  {en} { 
    \sys_if_engine_xetex:TF 
      {\msg_warning:nn {zslide}{compile-engine-pdftex}}
      {\RequirePackage[utf8]{inputenc}}
    \RequirePackage[T1]{fontenc}
    \RequirePackage[english]{babel}
  }
  {cn} {
    \sys_if_engine_xetex:TF {}{\msg_error:nn {zslide}{compile-engine-xetex}}
    \PassOptionsToPackage{quiet}{fontspec}
    \PassOptionsToPackage{no-math}{fontspec}
    \RequirePackage{ctex}
  }
}{\msg_error:nn {zslide}{option-language}}  

% minted package
\bool_if:NTF \g__zslide_minted_bool {
  \usepackage{minted}
  \setminted{
    fontsize=\small,
    bgcolor=slideGray, 
    breaklines=true, 
    tabsize=2,
    breakanywhere=true,
    breakanywheresymbolpre=,
    breaksymbolleft=,
    autogobble = true
  }
}{\relax}

% circle num
\cs_set:Npn \circleNum #1{
  \exp_args:Nx \ding{\fp_eval:n {191+#1}}
}





% ----------------------------------------------------------------------
%                           Math Environments 
% ----------------------------------------------------------------------
\RequirePackage{amsmath}          
\RequirePackage{esint} 
\RequirePackage{amsthm}
\definecolor{mathaxiomColor}{HTML}{000000}
\definecolor{mathdefinitionColor}{HTML}{bdc3c7}
\definecolor{maththeoremColor}{HTML}{27ae60}
\definecolor{mathlemmaColor}{HTML}{2980b9}
\definecolor{mathcorollaryColor}{HTML}{8e44ad}
\definecolor{mathpropositionColor}{HTML}{f39c12}
\definecolor{mathremarkColor}{HTML}{c92a2a}

% color spec for zslide
\zslide_define:nn {color}{
  % math envs      color
  axiom           .tl_set:N     =  \l__zslide_axiom_color_tl,
  axiom           .initial:n    =  { mathaxiomColor },
  definition      .tl_set:N     =  \l__zslide_definition_color_tl,
  definition      .initial:n    =  { mathdefinitionColor },
  theorem         .tl_set:N     =  \l__zslide_theorem_color_tl,
  theorem         .initial:n    =  { maththeoremColor },
  lemma           .tl_set:N     =  \l__zslide_lemma_color_tl,
  lemma           .initial:n    =  { mathlemmaColor },
  corollary       .tl_set:N     =  \l__zslide_corollary_color_tl,
  corollary       .initial:n    =  { mathcorollaryColor },
  proposition     .tl_set:N     =  \l__zslide_proposition_color_tl,
  proposition     .initial:n    =  { mathpropositionColor },
  remark          .tl_set:N     =  \l__zslide_remark_color_tl,
  remark          .initial:n    =  { mathremarkColor },
}

% framed env for user interface
\cs_new_protected:Npn \zslideFramed:nn #1#2 {
  \DeclareDocumentEnvironment{#1}{O{#2}}{
    \def\FrameCommand{{\color{##1}\vrule width 3pt}\colorbox{##1!10}}
    \MakeFramed{\advance\hsize-\width\FrameRestore}\noindent   
  }{\endMakeFramed}
}
\NewDocumentCommand\zslideFramed{mO{black}}{
  \zslideFramed:nn {#1}{#2}
}

% theorem/proof-like envs list 
\clist_gset:Nn \g__zslide_theoremlike_envs_clist  { 
  axiom, definition, theorem, 
  lemma, corollary,  proposition, remark 
}
\clist_gset:Nn \g__zslide_prooflike_envs_clist  { 
  proof,    exercise, example, 
  solution, problem,  
}

% math envs' name accrodingt to language
\msg_new:nnn {zslide}{mathenv-name}{Current~math~env~name~is~:~'#1'~,which~is-invalid.}
\str_case:VnTF \g__zslide_lang_str { 
  {en}{
    \zslide_define:nn {math-env}{
      math-env                .multichoice:,
      math-env / axiom        .code:n = { \tl_gset:cn {zslide#1Name}{Axiom} },
      math-env / definition   .code:n = { \tl_gset:cn {zslide#1Name}{Definition} },
      math-env / theorem      .code:n = { \tl_gset:cn {zslide#1Name}{Theorem} },
      math-env / lemma        .code:n = { \tl_gset:cn {zslide#1Name}{Lemma} },
      math-env / corollary    .code:n = { \tl_gset:cn {zslide#1Name}{Corollary} },
      math-env / proposition  .code:n = { \tl_gset:cn {zslide#1Name}{Proposition} },
      math-env / remark       .code:n = { \tl_gset:cn {zslide#1Name}{Remark} },
      math-env / proof        .code:n = { \tl_gset:cn {zslide#1Name}{Proof} },
      math-env / exercise     .code:n = { \tl_gset:cn {zslide#1Name}{Exercise} },
      math-env / example      .code:n = { \tl_gset:cn {zslide#1Name}{Example} },
      math-env / solution     .code:n = { \tl_gset:cn {zslide#1Name}{Solution} },
      math-env / problem      .code:n = { \tl_gset:cn {zslide#1Name}{Problem} },
      math-enc / unknown      .code:n = {
        \msg_error:nn {zslide}{mathenv-name}
      },
    }
  }
  {cn}{
    \zslide_define:nn {math-env}{
      math-env                .multichoice:,
      math-env / axiom        .code:n = { \tl_gset:cn {zslide#1Name}{公理} },
      math-env / definition   .code:n = { \tl_gset:cn {zslide#1Name}{定义} },
      math-env / theorem      .code:n = { \tl_gset:cn {zslide#1Name}{定理} },
      math-env / lemma        .code:n = { \tl_gset:cn {zslide#1Name}{引理} },
      math-env / corollary    .code:n = { \tl_gset:cn {zslide#1Name}{推论} },
      math-env / proposition  .code:n = { \tl_gset:cn {zslide#1Name}{命题} },
      math-env / remark       .code:n = { \tl_gset:cn {zslide#1Name}{注记} },
      math-env / proof        .code:n = { \tl_gset:cn {zslide#1Name}{证明} },
      math-env / exercise     .code:n = { \tl_gset:cn {zslide#1Name}{练习} },
      math-env / example      .code:n = { \tl_gset:cn {zslide#1Name}{示例} },
      math-env / solution     .code:n = { \tl_gset:cn {zslide#1Name}{解} },
      math-env / problem      .code:n = { \tl_gset:cn {zslide#1Name}{问题} },
      math-enc / unknown      .code:n = {
        \msg_error:nn {zslide}{mathenv-name}
      },
    }
  }
}{\zslide_set:nn {math-env}{math-env={axiom, definition, theorem, lemma, corollary, proposition, remark, proof, exercise, example, solution, problem}}}
{\msg_error:nn {zslide}{option-lang}}

% math env's style
\newtheoremstyle{zslideMathEnv}
  {2pt}{2pt}{}
  {0pt}{\bfseries}{}
  {.25em}{\thmname{#1}~ \thmnumber{#2}~ \thmnote{(#3)}}
\theoremstyle{zslideMathEnv}

% theorem-like env declaration
\msg_new:nnn {zslide}{mathenv-type}{Current~math~env~is~:~'\str_use:N \g__zslide_math_env_style_tl'~,only~'plain',~'leftbar',~'background',~'fancy'~types~are-valid.}
\DeclareDocumentEnvironment{zslideTheoremLikeFrame}{O{black}}{
  \str_case:VnF \g__zslide_math_env_style_tl {
    {plain}{  
      \def\FrameCommand{}
      \MakeFramed {\advance\hsize-\width \FrameRestore}
    }
    {leftbar}{
      \def\FrameCommand{{\color{#1}\vrule width 3pt}\hspace{5pt}}
      \MakeFramed {\advance\hsize-\width \FrameRestore}
    }
    {background}{
      \def\FrameCommand{\colorbox{#1!10}}
      \MakeFramed {\advance\hsize-\width \FrameRestore}
    }
    {fancy}{
      \def\FrameCommand{{\color{#1}\vrule width 3pt}\colorbox{#1!10}}
      \MakeFramed{\advance\hsize-\width \FrameRestore}
    }
  }{\msg_error:nn {zslide}{mathenv-type}}
}{\endMakeFramed}

% loop to create math env
\clist_map_inline:Nn \g__zslide_theoremlike_envs_clist {
  % theorem create
  \newtheorem{zslide#1}{\tl_use:c {zslide#1Name}}[section]
  % env create (3 types: 'leftbar', 'none' and 'backgroud')
  \DeclareDocumentEnvironment{#1}{O{}}{
    \begin{zslideTheoremLikeFrame}[\tl_use:c {l__zslide_#1_color_tl}]
    \begin{zslide#1}[##1]
  }{\end{zslide#1}\end{zslideTheoremLikeFrame}}
}

% proof-like env decalration
\NewDocumentEnvironment{zslideProofLikeFrame}{O{}}{
  \def\FrameCommand{}
  \MakeFramed {\advance\hsize-\width \FrameRestore}
}{\endMakeFramed}
\renewcommand{\qedsymbol}{\ensuremath{\blacksquare}}
\clist_map_inline:Nn \g__zslide_prooflike_envs_clist{
  \DeclareDocumentEnvironment{#1}{O{}}{
    \begin{zslideProofLikeFrame}[]
    {\noindent{\bfseries\tl_use:c {zslide#1Name}:}}
    \tl_set:Nn \l__arg_one_tl {#1}
  }{\str_if_eq:VnTF \l__arg_one_tl{proof}{\hfill\qedsymbol\par}{\par}\end{zslideProofLikeFrame}}
}

% equation number style
\counterwithin{equation}{section}

% math related cmds alias
\bool_if:NTF \g__zslide_math_alias_bool{
  \RequirePackage{amssymb, mathtools}
  \RequirePackage{bm}          
  % Math Font 
  \newcommand{\dd}{\mathrm{d}}
  \newcommand{\C}[1]{\ensuremath{\mathcal{#1}}}
  \let\ss\S
  \renewcommand{\S}[1]{\ensuremath{\mathscr{#1}}}
  \newcommand{\B}[1]{\ensuremath{\mathbb{#1}}}
  \newcommand{\FF}[1]{\ensuremath{\mathbf{#1}}}
  \newcommand{\F}[1]{\ensuremath{\bm{#1}}}
  \newcommand{\R}[1]{\ensuremath{\mathrm{#1}}}
  \newcommand{\K}[1]{\ensuremath{\mathfrak{#1}}}
  % Math Arrow 
  \newcommand{\lr}{\ensuremath{\longrightarrow}}
  \let\LL\ll
  \renewcommand{\ll}{\ensuremath{\longleftarrow}}
  \newcommand{\equ}{\ensuremath{\Longleftrightarrow}\,}
  \newcommand{\sr}{\ensuremath{\longmapsto}}
  \newcommand{\lrr}[2][]{\ensuremath{\xRightarrow[#1]{#2}}}
  \renewcommand{\lll}[2][]{\ensuremath{\xLeftarrow[#1]{#2}}}
  \newcommand{\ns}{\ensuremath{\varnothing}}
  \newcommand{\A}{\ensuremath{\forall}}
  % Math Operator
  \newcommand{\sgn}{\ensuremath{\mathrm{sgn}\;}}
  \newcommand{\curl}{\ensuremath{\mathrm{curl}\;}}
  \newcommand{\grad}{\ensuremath{\mathrm{grad}\;}}
  \newcommand{\trace}{\ensuremath{\mathrm{trace}\;}}
  \renewcommand{\div}{\ensuremath{\mathrm{div}\;}}
}{}
\ExplSyntaxOff





% ----------------------------------------------------------------------
%                          struct and color theme 
% ----------------------------------------------------------------------
% theme
\usetheme{Dresden}
\usecolortheme{beaver}
\setbeamertemplate{navigation symbols}{}

% color re-define
\definecolor{slideRed}{HTML}{a30000}
\definecolor{slideGray}{HTML}{e0e0e0}
\definecolor{slideWhite}{HTML}{f0f0f0}
\setbeamercolor{author in head/foot}{bg=slideRed,fg=white}
\setbeamercolor{title in head/foot}{fg=slideRed,bg=slideWhite}
\setbeamercolor{date in head/foot}{fg=slideRed,bg=slideGray}

% toc style
\setbeamertemplate{section in toc}{%
  {\color{slideRed}\inserttocsectionnumber.}~\inserttocsection}
\setbeamercolor{subsection in toc}{bg=white,fg=structure}
\setbeamertemplate{subsection in toc}{%
  \hspace{1.2em}{\color{slideRed}\raise1.5pt\hbox{\rule{2.5pt}{2.5pt}}}~{\color{black}\inserttocsubsection}\par}

% footline
\setbeamertemplate{footline}{%
  \leavevmode%
  \hbox{%
  \begin{beamercolorbox}[wd=.3\paperwidth,ht=2.25ex,dp=1ex,center]{author in head/foot}%
    \usebeamerfont{author in head/foot}
    \insertshortauthor
  \end{beamercolorbox}%
  \begin{beamercolorbox}[wd=.4\paperwidth,ht=2.25ex,dp=1ex,center]{title in head/foot}%
    \usebeamerfont{title in head/foot}
    \insertshorttitle
  \end{beamercolorbox}%
  \begin{beamercolorbox}[wd=.3\paperwidth,ht=2.25ex,dp=1ex,center]{date in head/foot}%
    \usebeamerfont{title in head/foot}
    \insertframenumber{}/\inserttotalframenumber\hspace*{1ex}
  \end{beamercolorbox}}%
  \vskip0pt%
}





% ----------------------------------------------------------------------
%                          other settings 
% ----------------------------------------------------------------------
% item style
\setlength{\leftmarginii}{1em}
\setlength{\leftmarginiii}{1em}
\setbeamertemplate{itemize item}{\({\color{slideRed}\bullet}\)\kern-2pt}
\setbeamertemplate{itemize subitem}{\({\color{slideRed}\circ}\)\kern-2pt}
\setbeamertemplate{itemize subsubitem}{\({\color{slideRed}\diamond}\)\kern-2pt}
\setbeamertemplate{enumerate item}{\textcolor{slideRed}{\insertenumlabel}.\kern-2pt}
\setbeamertemplate{enumerate subitem}{\textcolor{slideRed}{\insertenumlabel.\insertsubenumlabel}\kern-2pt}
\setbeamertemplate{enumerate subsubitem}{\textcolor{slideRed}{\insertenumlabel.\insertsubenumlabel.\insertsubsubenumlabel}\kern-2pt}

% column and pifont
\RequirePackage{multicol}
\RequirePackage{pifont}