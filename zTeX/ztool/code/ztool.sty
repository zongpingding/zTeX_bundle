\NeedsTeXFormat{LaTeX2e}
\RequirePackage{expl3}
\ProvidesExplPackage{ztool}{2025/05/15}{1.0.1}{A~pre-release~tool~package~for~LaTeX}


%%%%%    l3keys intial patch begin   %%%%%
% 1. https://github.com/latex3/latex3/issues/1738
% 2. https://tex.stackexchange.com/q/742604/294585
\cs_set_protected:Npn \__keys_initialise:n #1
  {
    \exp_after:wN \__keys_find_key_module:wNN
      \l_keys_path_str \s__keys_stop
      \l_keys_key_tl \l_keys_key_str
    \tl_set_eq:NN \l_keys_key_tl \l_keys_key_str
    \tl_set:Nn \l_keys_value_tl {#1}
    \cs_if_exist:cTF { \c__keys_code_root_str \l_keys_path_str }
      {
        \str_clear:N \l__keys_inherit_str
        \__keys_execute:nn \l_keys_path_str {#1}
      }
      {
        \cs_if_exist:cT
          { \c__keys_inherit_root_str \__keys_parent:o \l_keys_path_str }
          { \__keys_execute_inherit: }
      }
  }
%%%%%    l3keys intial patch end   %%%%%



% ==> l3sys-shell tool \MakeLinkTarget*{l3sys@shell} \pdfbookmark[2]{l3sys shell}{l3sys@shell}
% NOTE: Copy of the original 'l3sys-shell' + some modifications
% windows path handle
\cs_new:Npn \ztool_sys_path_to_win:N #1 
  {
    \quark_if_nil:NF #1 {
      \token_if_eq_meaning:NNTF #1 /
        { \c_backslash_str }
        {#1}
      \ztool_sys_path_to_win:N
    }
  }
\cs_new:Npn \ztool_sys_path_to_win:w #1 ~ #2 \q_stop
  {
    \ztool_sys_path_to_win:N #1 \q_nil
    \tl_if_empty:nF {#2}
      {
        \c_space_tl
        \__sys_path_to_win:w #2 \q_stop
      }
  }
\cs_new:Npn \ztool_sys_path_to_win:n #1
  {
    \exp_after:wN \ztool_sys_path_to_win:w \tl_to_str:n {#1} ~ \q_stop
  }
% respective commands
\cs_new_protected:Npn \ztool_shell_escape:n #1
  {
    \sys_if_shell_unrestricted:T
      { \sys_shell_now:n {#1} }
  }
\cs_generate_variant:Nn \ztool_shell_escape:n {e}
\cs_new_protected:Npe \ztool_shell_mkdir:n #1
  {
    \ztool_shell_escape:e {
      \sys_if_platform_unix:T 
        {mkdir~-p~\exp_not:N \tl_to_str:n {#1}}
      \sys_if_platform_windows:T
        {mkdir~ \exp_not:N \ztool_sys_path_to_win:n {#1}}
    }
  }
\cs_new_protected:Npe \ztool_shell_cp:nn #1#2
  {
    \ztool_shell_escape:e {
      \sys_if_platform_unix:T
        {
          cp~-f~ \exp_not:N \tl_to_str:n {#1} ~
            \exp_not:N \tl_to_str:n {#2}
        }
      \sys_if_platform_windows:T
        {% can NOT use wildcards in CMD
          copy~/y~ \exp_not:N \ztool_sys_path_to_win:n {#1} ~
            \exp_not:N \ztool_sys_path_to_win:n {#2}
        }
    }
  }
\cs_new_protected:Npe \ztool_shell_mv:nn #1#2
  {
    \ztool_shell_escape:e {
      \sys_if_platform_unix:T
        {
          mv~ \exp_not:N \tl_to_str:n {#1} ~
            \exp_not:N \tl_to_str:n {#2}
        }
      \sys_if_platform_windows:T
        {
          copy~/y~ \exp_not:N \ztool_sys_path_to_win:n {#1} ~
            \exp_not:N \ztool_sys_path_to_win:n {#2}
            \token_to_str:N & \token_to_str:N &
            del~/f~/q~\exp_not:N \ztool_sys_path_to_win:n {#1}
        }
    }
  }
\cs_new_protected:Npe \ztool_shell_rm:n #1
  {
    \ztool_shell_escape:e {
      \sys_if_platform_unix:T
        { rm~-f~ \exp_not:N \tl_to_str:n {#1}  }
      \sys_if_platform_windows:T
        { del~/f~/q~ \exp_not:N \ztool_sys_path_to_win:n {#1} }
    }
  }
\cs_new_protected:Npe \ztool_shell_rmdir:n #1
  {
    \ztool_shell_mkdir:n {#1}
    \ztool_shell_escape:e {
      \sys_if_platform_unix:T
        { rm~-rf~ \exp_not:N \tl_to_str:n {#1} }
      \sys_if_platform_windows:T
        { rmdir~/s~/q~ \exp_not:N \ztool_sys_path_to_win:n {#1} }
    }
  }
\tl_new:N \l__ztool_shell_tmp_tl
\cs_new_protected:Npe \ztool_get_shell_pwd:N #1
  {
    \exp_not:N \sys_get_shell:nnN
      {
        \sys_if_platform_unix:T { pwd }
        \sys_if_platform_windows:T { cd }
      }{
        \char_set_catcode_other:N \exp_not:N \\
        \char_set_catcode_other:N \exp_not:N \#
        \char_set_catcode_other:N \exp_not:N \~
        \char_set_catcode_other:N \exp_not:N \%
        \char_set_catcode_space:N \exp_not:N \ %
        \tex_endlinechar:D -1 \scan_stop:
      }
    \exp_not:N \l__ztool_shell_tmp_tl
    \str_set:NV #1 \exp_not:N \l__ztool_shell_tmp_tl
  }
\cs_new_protected:Npe \ztool_shell_split_ls:nN #1#2
  {
    \exp_not:N \sys_get_shell:nnN
      {
        \sys_if_platform_unix:T { ls~-1~ #1 }
        \sys_if_platform_windows:T { dir~/b~ #1 }
      }{
        \ExplSyntaxOff
        \char_set_catcode_other:N \exp_not:N \\
        \char_set_catcode_other:N \exp_not:N \#
        \char_set_catcode_other:N \exp_not:N \~
        \char_set_catcode_other:N \exp_not:N \%
        \char_set_catcode_other:n { 13 }
      }
      \exp_not:N \l__ztool_shell_tmp_tl
    \str_set:NV \exp_not:N \l__sys_tmp_tl \exp_not:N \l__sys_tmp_tl
    \seq_set_split:NnV #2 
      { \char_generate:nn { `\^^M } { 12 } }
      \exp_not:N \l__ztool_shell_tmp_tl
    \seq_pop_right:NN #2 \exp_not:N \l__sys_tmp_tl
  }
\cs_generate_variant:Nn \ztool_shell_mkdir:n {e}
\cs_generate_variant:Nn \ztool_shell_cp:nn { ee, ne, en }
\cs_generate_variant:Nn \ztool_shell_mv:nn { ee, ne, en }
\cs_generate_variant:Nn \ztool_shell_rm:nn { e, f, o }
\cs_generate_variant:Nn \ztool_shell_rmdir:nn { e, f, o }
\cs_generate_variant:Nn \ztool_get_shell_pwd:N {c}
\cs_generate_variant:Nn \ztool_shell_split_ls:nN {nc}



% ==> file IO operations \MakeLinkTarget*{file@io} \pdfbookmark[2]{File IO}{file@io}
\ior_new:N \g_ztool_file_read_ior
\ior_new:N \g_ztool_file_append_ior
\iow_new:N \g_ztool_file_append_iow
\tl_new:N \l_ztool_current_line
\str_clear:N \l_ztikz_file_ori_content_str
\seq_new:N \l_ztool_file_seq
\cs_new_protected:Npn \ztool_read_file_as_seq:nnN #1#2#3 
  {% #1: bool(True to keep spaces, False to trim); #2: file name; #3: seq
    \seq_clear:N #3
    \file_if_exist:nT {#2}
      {
        \ior_open:Nn \g_ztool_file_read_ior {#2}
        \ior_map_inline:Nn \g_ztool_file_read_ior
          {
            \bool_if:nTF {#1}
              { \seq_put_right:Nn #3 {##1} }
              { \seq_put_right:Nn #3 {\tl_trim_spaces:n {##1}} }
          }
        \ior_close:N \g_ztool_file_read_ior
      }
  }
\cs_new_protected:Npn \ztool_gread_file_as_seq:nnN #1#2#3 
  {% #1: bool(True to keep spaces, False to trim); #2: file name; #3: seq
    \seq_gclear:N #3
    \file_if_exist:nT {#2}
      {
        \ior_open:Nn \g_ztool_file_read_ior {#2}
        \ior_map_inline:Nn \g_ztool_file_read_ior
          {
            \bool_if:nTF {#1}
              { \seq_gput_right:Nn #3 {##1} }
              { \seq_gput_right:Ne #3 {\tl_trim_spaces:n {##1}} }
          }
        \ior_close:N \g_ztool_file_read_ior
      }
  }
\cs_generate_variant:Nn \ztool_read_file_as_seq:nnN { ne, nnc, nec }
\cs_generate_variant:Nn \ztool_gread_file_as_seq:nnN { ne, nnc, nec }

\cs_new_protected:Npn \ztool_file_new:nn #1#2
  {% #1: \cs{c_true_bool} to allow overwrite; #2: file name
    \bool_if:nT {#1}
      {
        \iow_open:Nn \g_ztool_file_append_iow {#2}
        \iow_close:N \g_ztool_file_append_iow
      }
  }
\cs_new_protected:Npn \ztool_append_to_file:nn #1#2 
  {% #1: file name; #2: content
    \seq_clear:N \l_ztool_file_seq
    \file_if_exist:nF {#1}{ \ztool_file_new:nn {\c_false_bool}{#1} }
    \ior_open:Nn \g_ztool_file_append_ior {#1}
    \ior_str_map_inline:Nn \g_ztool_file_append_ior 
      {
        \seq_put_right:Nn \l_ztool_file_seq 
          { ##1 }
      }
    \iow_open:Nn \g_ztool_file_append_iow {#1}  
    \iow_now:Ne \g_ztool_file_append_iow 
      { \seq_use:Nn \l_ztool_file_seq {^^J} }
    \iow_now:Ne \g_ztool_file_append_iow {#2}
    \iow_close:N \g_ztool_file_append_iow
  }
\cs_generate_variant:Nn \ztool_append_to_file:nn { no, nf, ne, ee }
\cs_new_protected:Npn \ztool_replace_file_line:nnn #1#2#3 
  {% #1:file name; #2:line index; #3:replacement
    \seq_clear:N \l_ztool_file_seq
    \file_if_exist:nT {#1}{
      \ior_open:Nn \g_ztool_file_read_ior {#1}
      \ior_str_map_inline:Nn \g_ztool_file_read_ior 
        {
          \seq_put_right:Nn \l_ztool_file_seq {##1}
        }
      \ior_close:N \g_ztool_file_read_ior
      \seq_set_item:Nnn \l_ztool_file_seq {#2} 
        { #3 }
      \iow_open:Nn \g_ztool_file_append_iow {#1}
      \iow_now:Ne \g_ztool_file_append_iow 
        { \seq_use:Nn \l_ztool_file_seq {^^J} }
      \iow_close:N \g_ztool_file_append_iow
    }
  }
\cs_generate_variant:Nn \seq_set_item:Nnn { Nne }
\cs_generate_variant:Nn \ztool_replace_file_line:nnn { e, ene, eee }
\cs_new_protected:Npn \ztool_insert_to_file:nnn #1#2#3
  {% #1:file name; #2:line index; #3:content
    \seq_clear:N \l_ztool_file_seq
    \file_if_exist:nT {#1}{
      \ior_open:Nn \g_ztool_file_read_ior {#1}
      \ior_str_map_inline:Nn \g_ztool_file_read_ior 
        {
          \seq_put_right:Nn \l_ztool_file_seq {##1}
        }
      \ior_close:N \g_ztool_file_read_ior
      \tl_set:No \l_ztool_current_line 
        { \seq_item:Nn \l_ztool_file_seq {#2} }
      \seq_set_item:Nne \l_ztool_file_seq {#2} 
        { #3^^J\l_ztool_current_line }
      \iow_open:Nn \g_ztool_file_append_iow {#1}
      \iow_now:Ne \g_ztool_file_append_iow 
        { \seq_use:Nn \l_ztool_file_seq {^^J} }
      \iow_close:N \g_ztool_file_append_iow
    }
  }
\cs_generate_variant:Nn \ztool_insert_to_file:nn { ne, nf, ee }



% ==> box manipulation tool \MakeLinkTarget*{box@manipulation} \pdfbookmark[2]{盒子操作}{box@manipulation}
\cs_set:Nn \__ztool_leave_vmode:
  { \ifvmode \leavevmode \fi }
% catch box dimension
\box_new:N \l_ztool_measure_box
\cs_new:Npn \ztool_box_set_to:NNn #1#2#3 {
  \hbox_set:Nn \l_ztool_measure_box {#3}
  \dim_set:Nn #2 {#1 \l_ztool_measure_box}
  \box_set_eq:NN \l_ztool_measure_box \c_empty_box
}
\cs_new:Npn \ztool_box_gset_to:NNn #1#2#3 {
  \hbox_set:Nn \l_ztool_measure_box {#3}
  \dim_gset:Nn #2 {#1 \l_ztool_measure_box}
  \box_set_eq:NN \l_ztool_measure_box \c_empty_box
}
\cs_new:Npn \ztool_get_ht:Nn 
  { \ztool_box_set_to:NNn \box_ht:N }
\cs_new:Npn \ztool_get_ht_plus_dp:Nn 
  { \ztool_box_set_to:NNn \box_ht_plus_dp:N }
\cs_new:Npn \ztool_get_wd:Nn  
  { \ztool_box_set_to:NNn \box_wd:N }
\cs_new:Npn \ztool_get_dp:Nn  
  { \ztool_box_set_to:NNn \box_dp:N }
\cs_new:Npn \ztool_gget_ht:Nn 
  { \ztool_box_gset_to:NNn \box_ht:N }
\cs_new:Npn \ztool_gget_wd:Nn  
  { \ztool_box_gset_to:NNn \box_wd:N }
\cs_new:Npn \ztool_gget_dp:Nn  
  { \ztool_box_gset_to:NNn \box_dp:N }
\cs_generate_variant:Nn \ztool_get_ht:Nn  { Ne, ce }
\cs_generate_variant:Nn \ztool_get_ht_plus_dp:Nn  { Ne, ce }
\cs_generate_variant:Nn \ztool_get_wd:Nn  { Ne, ce }
\cs_generate_variant:Nn \ztool_gget_ht:Nn { Ne, ce }
\cs_generate_variant:Nn \ztool_gget_wd:Nn { Ne, ce }


%% modify box content
% 1. auto scale and rotate (smaller of two)
\cs_new_protected:Npn \ztool_autoset_to_wd_and_ht:nnn #1#2#3
  {% #1:width; #2:height; #3:object 
    \hbox_set:Nn \l_tmpa_box {#3}
    \box_autosize_to_wd_and_ht:Nnn \l_tmpa_box {#1}{#2}
    \__ztool_leave_vmode:
    \box_use:N \l_tmpa_box
  }
\cs_new_protected:Npn \ztool_rotate:nn #1#2
  {% #1:angle; #2:object
    \hbox_set:Nn \l_tmpa_box {#2}
    \box_rotate:Nn \l_tmpa_box {#1}
    \__ztool_leave_vmode:
    \box_use:N \l_tmpa_box
  }
\cs_generate_variant:Nn \ztool_rotate:nn { e, ne, ee }
\cs_generate_variant:Nn \ztool_autoset_to_wd_and_ht:nnn { nne, een, eee }

% 2. width/height scale to same time
\cs_new_protected:Npn \ztool_set_to_wd:nn #1#2
  {% #1:width; #2:object
    \hbox_set:Nn \l_tmpa_box {#2}
    \box_resize_to_wd:Nn \l_tmpa_box {#1}
    \__ztool_leave_vmode:
    \box_use:N \l_tmpa_box
  }
\cs_new_protected:Npn \ztool_set_to_ht:nn #1#2
  {% #1:height; #2:object
    \hbox_set:Nn \l_tmpa_box {#2}
    \box_resize_to_ht:Nn \l_tmpa_box {#1}
    \__ztool_leave_vmode:
    \box_use:N \l_tmpa_box
  }
\cs_generate_variant:Nn \ztool_set_to_wd:nn { e, ne, ee }
\cs_generate_variant:Nn \ztool_set_to_ht:nn { e, ne, ee }

% 3. only scale one dimension
% NOTE: if boxwd{content} $\le$ given dim, no manipulation
\cs_new_protected:Npn \ztool_scale_to_wd:nn #1#2
  {
    \hbox_set:Nn \l_tmpa_box {#2}
    \dim_set:Nn \l_tmpa_dim { \box_wd:N \l_tmpa_box }
    \fp_set:Nn \l_tmpa_fp  
      { 
        \fp_eval:n { min(1, \dim_ratio:nn {#1}{\l_tmpa_dim}) }
      }
    \box_scale:Nnn \l_tmpa_box {\l_tmpa_fp}{1}
    \__ztool_leave_vmode:
    \box_use:N \l_tmpa_box
  }
\cs_new_protected:Npn \ztool_scale_to_ht:nn #1#2
  {% take depth into consideration
    \hbox_set:Nn \l_tmpa_box {#2}
    \dim_set:Nn \l_tmpa_dim { \box_ht_plus_dp:N \l_tmpa_box }
    \fp_set:Nn \l_tmpa_fp  
      { 
        \fp_eval:n { min(1, \dim_ratio:nn {#1}{\l_tmpa_dim}) }
      }
    \box_scale:Nnn \l_tmpa_box {1}{\l_tmpa_fp}
    \__ztool_leave_vmode:
    \box_use:N \l_tmpa_box
  }
\cs_new_protected:Npn \ztool_scale_to_wd_and_ht:nnn #1#2#3
  {% take depth into consideration
    \hbox_set:Nn \l_tmpa_box {#3}
    \dim_set:Nn \l_tmpa_dim { \box_wd:N \l_tmpa_box }
    \dim_set:Nn \l_tmpb_dim { \box_ht_plus_dp:N \l_tmpa_box }
    \fp_set:Nn \l_tmpa_fp  
      { 
        \fp_eval:n { min(1, \dim_ratio:nn {#1}{\l_tmpa_dim}) }
      }
    \fp_set:Nn \l_tmpb_fp  
      { 
        \fp_eval:n { min(1, \dim_ratio:nn {#2}{\l_tmpb_dim}) }
      }
    \box_scale:Nnn \l_tmpa_box {\l_tmpa_fp}{\l_tmpb_fp}
    \__ztool_leave_vmode:
    \box_use:N \l_tmpa_box
  }
\cs_generate_variant:Nn \ztool_scale_to_wd:nn { e, ne, ee }
\cs_generate_variant:Nn \ztool_scale_to_ht:nn { e, ne, ee }
\cs_generate_variant:Nn \ztool_scale_to_wd_and_ht:nnn { nne, nno, eee }


%% box content align
\seq_new:N \l__ztool_boxitem_seq
\cs_set_protected:Npn \ztool_box_item_align:Nnnn #1#2#3#4
  {% #1:cmd, #2:width, #3:object, #4:align format(left, right, scatter, center)
    \hb@xt@#2{
      \tl_map_inline:nn {#3} 
        {
          \seq_put_right:No \l__ztool_boxitem_seq {\exp_not:N #1{##1}}
        } 
      \str_case:nnF { #4 }
        {
          {  left  }{ \seq_use:Nn \l__ztool_boxitem_seq {}\hfill }
          {  right }{ \hfill\seq_use:Nn \l__ztool_boxitem_seq {} }
          { scatter}{ \seq_use:Nn \l__ztool_boxitem_seq {\hfill} }
          { center }{ \hfill\seq_use:Nn \l__ztool_boxitem_seq {}\hfill }
          { tower  }
            {
              \edef\seq@count{\seq_count:N \l__ztool_boxitem_seq}
              \seq_map_indexed_inline:Nn \l__ztool_boxitem_seq
                {% ##1: index, ##2: content
                  %% Method II: plain
                  \edef\item@width{\dim_eval:n {#2/(\seq@count+1)}}
                  \hskip\item@width\clap{##2}
                }\hskip\item@width\hss
            }
          { custom }
            {
              \def\total@width{#2}
              \def\align@cmd{#1}
              \def\align@object{#3}
              \def\align@format{#4}
              \tl_use:N \l__ztex_boxitem_align_custom_tl 
            }
        }{\relax}
    }
    \seq_clear:N \l__ztool_boxitem_seq
  }
\cs_generate_variant:Nn \ztool_box_item_align:Nnnn { c, Nnno, cnno, Nne, Nnee }


%% affine transformation
% REF:
% 1. https://math.stackexchange.com/a/3521141/1235323
% 2. https://math.stackexchange.com/a/281087/1235323
\cs_new:Npn \ztool_fp_to_rad:n #1
  { \fp_eval:n {#1/pi*180} }
\cs_new:Npn \ztool_matrix_det:nnnn #1#2#3#4
  {
    \fp_eval:n { #1*#4 - #2*#3 }
  }
% (translation) + $x$-scale + $y$-scale + rotate
\fp_new:N \g_affine_precision_fp
\fp_set:Nn \g_affine_precision_fp {0.0001}
\fp_new:N \l__affine_@@_a_fp
\fp_new:N \l__affine_@@_b_fp
\fp_new:N \l__affine_@@_c_fp
\fp_new:N \l__affine_@@_d_fp
\msg_set:nnn { ztool }{affine-det-zero}
  {
    current~determination~of~the~affine~transformation~
    matrix~equals~to~zero,~give~up~this~transformation
  }

\coffin_new:N \l__affine_trans_coffin
\cs_generate_variant:Nn \coffin_typeset:Nnnnn { Nxxxx }
\cs_new:Npn \ztool_affine_transformation:Nnnnn #1#2#3#4#5
  {% #1:box; #2:$a_{11}$; #3:$a_{21}$; #4:$a_{12}$; #5:$a_{22}$.
    \fp_compare:nNnT 
      { abs(\ztool_matrix_det:nnnn {#2}{#3}{#4}{#5}) } 
        < { \g_affine_precision_fp }
      { \prg_map_break:Nn \l__affine_matrix_det_zero 
        { \msg_warning:nn { ztool }{affine-det-zero} }}
    \fp_set:Nn \l__affine_@@_a_fp {#2}
    \fp_set:Nn \l__affine_@@_b_fp {#3}
    \fp_set:Nn \l__affine_@@_c_fp {#4}
    \fp_set:Nn \l__affine_@@_d_fp {#5}
    \__box_affine_transform:N #1
    \prg_break_point:Nn \l__affine_matrix_det_zero { }
    \coffin_typeset:Nxxxx \l__affine_trans_coffin 
      { \l__ztool_affine_pole_a_tl }{ \l__ztool_affine_pole_b_tl }
      { \l__ztool_affine_xoffset_dim }{ \l__ztool_affine_yoffset_dim }
  }
\cs_generate_variant:Nn \ztool_affine_transformation:Nnnnn { Neeee, cnnnn, ceeee }
\cs_new:Npn \__box_affine_transform:N #1
  {
    % transform debug
    \bool_if:NT \g_ztool_affine_debug_bool
      {
        \noindent\dotfill\[\begin{bmatrix}
          \fp_use:N \l__affine_@@_a_fp & \fp_use:N \l__affine_@@_c_fp\\
          \fp_use:N \l__affine_@@_b_fp & \fp_use:N \l__affine_@@_d_fp
        \end{bmatrix}\]
      }
    % get affine parameters 
    \__affine_trans_get_sx:     
    \__affine_trans_get_theta:  
    \__affine_trans_get_sy:     
    \__affine_trans_get_Sx:     
    \__affine_trans_get_Sy:     
    \__affine_trans_get_phi:    
    \__affine_trans_get_omega: 
    % start transform box/coffin
    \coffin_scale:Nnn #1 
      { \l__box_affine_sx_fp }
      { \l__box_affine_sy_fp }
    \coffin_rotate:Nn #1 
      { \ztool_fp_to_rad:n {\l__box_affine_omega_fp} }
    \coffin_scale:Nnn #1
      { \l__box_affine_Sx_fp }
      { \l__box_affine_Sy_fp }
    \coffin_rotate:Nn #1
      { \ztool_fp_to_rad:n {\l__box_affine_phi_fp} }
    \coffin_rotate:Nn #1 
      { \ztool_fp_to_rad:n {\l__box_affine_theta_fp} }
  }
\keys_define:nn { ztool / affine }
  {
    debug   .bool_gset:N = \g_ztool_affine_debug_bool,
    debug   .initial:n   = false,
    debug   .default:n   = true,
    pole-1  .tl_set:N    = \l__ztool_affine_pole_a_tl,
    pole-2  .tl_set:N    = \l__ztool_affine_pole_b_tl,
    pole-1  .initial:n   = { l },
    pole-2  .initial:n   = { b },
    xoffset .dim_set:N   = \l__ztool_affine_xoffset_dim,
    yoffset .dim_set:N   = \l__ztool_affine_yoffset_dim,
    xoffset .initial:n   = { 0pt },
    yoffset .initial:n   = { 0pt },
  }
\NewDocumentCommand{\ztoolboxaffine}{O{}m>{\SplitList{,}}m}
  {% #1:key-value; #2:content; #3:matrix.
    \group_begin:
      \keys_set:nn { ztool / affine } {#1}
      \hcoffin_set:Nn \l__affine_trans_coffin {#2}
      \ztool_affine_transformation:Nnnnn \l__affine_trans_coffin #3
    \group_end:
  }
% internal affine transform functions
\cs_new:Nn \__ztool_affine_debug_fp:N
  {
    \bool_if:NTF \g_ztool_affine_debug_bool 
      { \string #1 % \cs{show} #1
        ~=~\fp_use:N #1\\
      }{ \relax } 
  }
\fp_new:N \l__box_affine_sx_fp
\cs_new:Nn \__affine_trans_get_sx: 
  {
    \fp_set:Nn \l__box_affine_sx_fp 
      { \fp_eval:n {sqrt(\l__affine_@@_a_fp^2 + \l__affine_@@_b_fp^2)} }
    \__ztool_affine_debug_fp:N \l__box_affine_sx_fp
  }
\fp_new:N \l__box_affine_theta_fp 
\cs_new:Nn \__affine_trans_get_theta: 
  {
    \fp_set:Nn \l__box_affine_theta_fp 
      { \fp_eval:n {atan(\l__affine_@@_b_fp/\l__affine_@@_a_fp)} }
    \__ztool_affine_debug_fp:N \l__box_affine_theta_fp
  }
\fp_new:N \l__box_affine_msy_fp 
\cs_new:Nn \__affine_trans_get_msy: 
  {
    \fp_set:Nn \l__box_affine_msy_fp 
      { \fp_eval:n {
        \l__affine_@@_c_fp*cos(\l__box_affine_theta_fp) 
        + 
        \l__affine_@@_d_fp*sin(\l__box_affine_theta_fp)
      } }
    \__ztool_affine_debug_fp:N \l__box_affine_msy_fp
  }
\fp_new:N \l__box_affine_sy_fp
\cs_new:Nn \__affine_trans_get_sy: 
  {
    \__affine_trans_get_msy: 
    \bool_if:nTF
      {
        \fp_compare_p:nNn { abs(sin(\l__box_affine_theta_fp)) } 
          < {\c_zero_fp + \g_affine_precision_fp}
      }{
        \fp_set:Nn \l__box_affine_sy_fp 
          {
            ( \l__affine_@@_d_fp - \l__box_affine_msy_fp*sin(\l__box_affine_theta_fp) )
            / cos(\l__box_affine_theta_fp)
          }
      }{
        \fp_set:Nn \l__box_affine_sy_fp 
          {
            ( \l__box_affine_msy_fp*cos(\l__box_affine_theta_fp) - \l__affine_@@_c_fp )
            / sin(\l__box_affine_theta_fp)
          }
      }
    \__ztool_affine_debug_fp:N \l__box_affine_sy_fp
  }
\fp_new:N \l__box_affine_m_fp
\cs_new:Nn \__affine_trans_get_m: 
  {
    \fp_set:Nn \l__box_affine_m_fp 
      { \l__box_affine_msy_fp / \l__box_affine_sy_fp }
    \__ztool_affine_debug_fp:N \l__box_affine_m_fp
  }
\fp_new:N \l__box_affine_Sx_fp
\fp_new:N \l__box_affine_Sy_fp
\cs_new:Nn \__affine_trans_get_Sx: 
  {
    \__affine_trans_get_m:      
    \fp_set:Nn \l__box_affine_Sx_fp 
      { sqrt(\l__box_affine_m_fp^2/4 + 1) - \l__box_affine_m_fp/2 }
    \__ztool_affine_debug_fp:N \l__box_affine_Sx_fp
  }
\cs_new:Nn \__affine_trans_get_Sy: 
  {
    \fp_set:Nn \l__box_affine_Sy_fp 
      { sqrt(\l__box_affine_m_fp^2/4 + 1) + \l__box_affine_m_fp/2 }
    \__ztool_affine_debug_fp:N \l__box_affine_Sy_fp
  }
\fp_new:N \l__box_affine_phi_fp
\fp_new:N \l__box_affine_omega_fp
\cs_new:Nn \__affine_trans_get_phi: 
  {
    \fp_set:Nn \l__box_affine_phi_fp 
      { -pi/4 - 1/2*atan(\l__box_affine_m_fp/2) }
    \__ztool_affine_debug_fp:N \l__box_affine_phi_fp
  }
\cs_new:Nn \__affine_trans_get_omega: 
  {
    \fp_set:Nn \l__box_affine_omega_fp 
      { pi/4 - 1/2*atan(\l__box_affine_m_fp/2) }
    \__ztool_affine_debug_fp:N \l__box_affine_omega_fp
  }



% ==> ztool draw (based on package 'pict2e' and 'picture' env) \MakeLinkTarget*{zdraw@} \pdfbookmark[2]{zdraw}{zdraw@}
\RequirePackage{pict2e}
\cs_new:Npn \_@@_begin_picture:nnnn #1#2#3#4 
  { \begin{picture}
      (\fp_eval:n {#1}, \fp_eval:n {#2})
      (\fp_eval:n {-#3}, \fp_eval:n {-#4}) }
\cs_new:Nn \_@@_end_picture:
  { \end{picture} }
\cs_new:Npn \__@@_pic_put:nnn #1#2#3 
  { \put(\fp_eval:n {#1}, \fp_eval:n {#2}){ #3 } }
\cs_generate_variant:Nn \_@@_begin_picture:nnnn { VVVV, eeee }
\cs_generate_variant:Nn \__@@_pic_put:nnn { VVV, een }

% picture environment alias
\keys_define:nn { ztool / draw / picture }
  {
    unit    .dim_set:N = \l__pic_unit_dim,
    unit    .initial:n = { 1cm },
    width   .fp_set:N  = \l__pic_width_fp,
    width   .initial:n = 0,
    height  .fp_set:N  = \l__pic_height_fp,
    height  .initial:n = 0,
    xoffset .fp_set:N  = \l__pic_xoffset_fp,
    xoffset .initial:n = 0,
    yoffset .fp_set:N  = \l__pic_yoffset_fp,
    yoffset .initial:n = 0,
    opacity-color .tl_set:N  = \l__pic_opacity_color_tl,
    opacity-color .initial:n = { white },
  }
\NewDocumentEnvironment{zpic}{O{}}
  {
    \group_begin: 
    \keys_set:nn { ztool / draw / picture } {#1} 
    \setlength\unitlength{ \l__pic_unit_dim }
    \_@@_begin_picture:VVVV   
      \l__pic_width_fp  \l__pic_height_fp 
      \l__pic_xoffset_fp\l__pic_yoffset_fp
  }{ 
    \_@@_end_picture: 
    \group_end:
  }


% picture commands alias
\cs_new:Npn \__coor_st:n #1
  { \clist_item:nn {#1}{1} }
\cs_new:Npn \__coor_nd:n #1
  { \clist_item:nn {#1}{2} }
\cs_new:Npn \__coor_rd:n #1#2
  { \clist_item:nn {#1}{3} }
\cs_new:Npn \__coor_st_nd:n #1 
  { 
    {\clist_item:nn {#1}{1}} 
    {\clist_item:nn {#1}{2}}
  }
\cs_new:Npn \__coor_st_nd_rd:n #1 
  {
    {\clist_item:nn {#1}{1}}
    {\clist_item:nn {#1}{2}} 
    {\clist_item:nn {#1}{3}} 
  }
\cs_generate_variant:Nn \__coor_st:n { V, e }
\cs_generate_variant:Nn \__coor_nd:n { V, e }
\cs_generate_variant:Nn \__coor_rd:n { V, e }
\cs_generate_variant:Nn \__coor_st_nd:n { V, e }
\cs_generate_variant:Nn \__coor_st_nd_rd:n { V, e }

\bool_new:N \l__ztool_invalid_color_bool
\cs_new:Npn \__color_safe_use:n #1
  {
    \__color_if_valid:nT {#1}
      { \color{#1} }
  }
\prg_new_conditional:Npnn \__color_if_valid:n #1 {p, T, F, TF}
  {
    \def\ztool@targer@color{#1}
    \def\ztool@color@none{none}
    \bool_if:eTF 
      { 
        \tl_if_empty_p:e {#1} || 
        \tl_if_eq_p:NN \ztool@color@none \ztool@targer@color
      }{ \prg_return_false: }
      { \prg_return_true: }
  }
\prg_generate_conditional_variant:Nnn \__color_if_valid:n 
  { V, e }{ p, T, F, TF }
\cs_generate_variant:Nn \__color_safe_use:n { V, e }


% --> line/vector
\fp_new:N \l__draw_vector_slope_fp 
\fp_new:N \l__draw_vector_normal_fp
\fp_new:N \l__draw_vector_xsep_fp
\cs_new:Npn \__@@_pic_line:nnn #1#2#3
  {% #1:$x$; #2:$y$; #3:$x$-distance NOT the length
    \line(\fp_eval:n {#1}, \fp_eval:n {#2})
      { \fp_eval:n {#3} }
  }
\cs_new:Npn \__@@_pic_vector:nnn #1#2#3
  {% #1:$x$; #2:$y$; #3:$x$-distance NOT the length
    \vector(\fp_eval:n {#1}, \fp_eval:n {#2})
      { \fp_eval:n {#3} }
  }
\keys_define:nn { ztool / draw / picture / line }
  {
    draw   .tl_set:N  = \l__pic_line_draw_color_tl,
    draw   .initial:n = { black },
    % color  .meta:n    = { draw = #1 }, % alias for 'draw'
    width  .dim_set:N = \l__pic_line_width_dim,
    width  .initial:n = { .4pt },
    dash   .bool_set:N = \l__pic_line_dash_bool,
    dash   .initial:n = { false },
  }
\cs_new_protected:Nn \__pic_set_line_width:
  {
    \linethickness{ \l__pic_line_width_dim }
  }
\cs_new_protected:Nn \__pic_set_line_color:
  {
    \__color_safe_use:V \l__pic_line_draw_color_tl
  }
\cs_new_protected:Nn \__pic_set_fill_color:
  {
    \__color_safe_use:V \l__pic_region_fill_color_tl
  }
\def\z@pic@vector@style{\ltxarrows}
\keys_define:nn { ztool / draw / picture } 
  {
    vector .inherit:n = { ztool/draw/picture/line },
  }
\keys_define:nn { ztool / draw / picture / vector }
  {
    >           .choice:,
    > / latex   .code:n = {\def\z@pic@vector@style{\ltxarrows}},
    > / pst     .code:n = {\def\z@pic@vector@style{\pstarrows}},
    > / unknown .code:n =
      {
        \msg_set:nnn { ztool }{unknown-arrow-style}
          { Unknown~arrow~style,~use~'latex'~or~'pst'. }
        \msg_error:nn { ztool }{unknown-arrow-style}
      }
  }
\cs_new_protected:Npn \ztool_pic_line_vector:nnnn #1#2#3#4
  {% #1:line/vector; #2:key-value; #3:start coor; #4:end coor;
    \group_begin:
    \keys_set:nn { ztool / draw / picture / #1 }{#2}
    \fp_set:Nn \l__draw_vector_slope_fp
      { (\__coor_nd:n {#4} - \__coor_nd:n {#3})
      / (\__coor_st:n {#4} - \__coor_st:n {#3}) }
    \fp_set:Nn \l__draw_vector_xsep_fp
      { abs(\__coor_st:n {#4} - \__coor_st:n {#3}) }
    \z@pic@vector@style
    \__pic_set_line_width: 
    \exp_last_unbraced:Ne \__@@_pic_put:nnn {\__coor_st_nd:n {#3}}
      {
        \__pic_set_line_color:
        \cs:w __@@_pic_#1:nnn\cs_end: {1}
          { \l__draw_vector_slope_fp }
          { \l__draw_vector_xsep_fp  }
      }
    \group_end:
  }
\NewDocumentCommand{\zline}{O{}d()d()}
  { 
    \ztool_pic_line_vector:nnnn {line}{#1}{#2}{#3}
  }
\NewDocumentCommand{\zvector}{O{}d()d()}
  { 
    \ztool_pic_line_vector:nnnn {vector}{#1}{#2}{#3}
  }


% --> \cs{zdraw} -- similar to \cs{tikz} command in tikz
% NOTE: these line/vector commands are identical to
%  1. \cs{Line} $(x_1, y_1)(x_2, y_2)$,        \cs{Vector}$(x_1,y_1)(x_2,y_2)$
%  2. \cs{polyline} $(x_1, y_1) \cdots (x_n, y_n)$, \cs{polyvector}$(x_1, y_1) \cdots (x_n, y_n)$
%  3. \cs{polygon} $(x_1, y_1) \cdots (x_n, y_n)$, when set 'cycle', 
%     \cs{polygon}*$(x_1, y_1) \cdots (x_n, y_n)$, when set 'fill' (auto cycle).
%  4. Trim leading space after '\cs{polygon}' or '*' to avoid error !!
\cs_new:Npn \__@@_pic_Line:nnnn #1#2#3#4
  { \Line (#1, #2)(#3, #4) }
\cs_new:Npn \__@@_pic_Vector:nnnn #1#2#3#4
  { \Vector (#1, #2)(#3, #4) }
\cs_new:Npn \__@@_pic_polyline:n #1
  { 
    \tl_set:Ne \l_tmpa_tl {\tl_trim_spaces:e {#1}}
    \exp_last_unbraced:NV \polyline \l_tmpa_tl
  }
\cs_new:Npn \__@@_pic_polyvector:n #1
  {
    \tl_set:Ne \l_tmpa_tl {\tl_trim_spaces:e {#1}}
    \exp_last_unbraced:NV \polyvector \l_tmpa_tl 
  }
\cs_new:Npn \__@@_pic_polygon:nn #1#2
  {
    \tl_set:Ne \l_tmpa_tl {\tl_trim_spaces:e {#1}}
    \tl_set:Ne \l_tmpb_tl {\tl_trim_spaces:e {#2}}
    \tl_set:Ne \l_tmpa_tl { \l_tmpa_tl\l_tmpb_tl }
    \exp_last_unbraced:NV \polygon \l_tmpa_tl
  }
\cs_generate_variant:Nn \__@@_pic_polygon:nn { nV, ne }
\tl_new:N \l__pic_region_fill_color_tl
\bool_new:N \l__pic_region_fill_bool
\keys_define:nn { ztool / draw / picture / region } 
  {
    fill   .choices:nn  = { true, false }{ 
      \use:c { bool_set_ \l_keys_choice_tl :N } 
        \l__pic_region_fill_bool 
    },
    fill   .initial:n   = { false },
    fill   .default:n   = { true  },
    fill / unknown .code:n = {
      \tl_if_empty:eF \l_keys_value_tl 
        { \bool_set_true:N \l__pic_region_fill_bool }
      \tl_set:Ne \l__pic_region_fill_color_tl { \l_keys_value_tl } 
    },
  }
\keys_define:nn { ztool / draw / picture } 
  {
    zdraw   .inherit:n   =   {
      ztool/draw/picture/line,
      ztool/draw/picture/vector,
      ztool/draw/picture/region,
    },
  }
\keys_define:nn { ztool / draw / picture / zdraw }
  {
    vector  .bool_set:N = \l__pic_draw_vector_bool,
    vector  .initial:n  = { false },
    cycle   .bool_set:N = \l__pic_draw_cycle_bool,
    cycle   .initial:n  = { false }, 
    shift   .tl_set:N   = \l__pic_draw_shift_tl,
    shift   .initial:n  = { 0, 0 },
  }
\cs_new:Npn \__region_fill_color_miss:n #1 
  {
    \bool_if:eT { 
      \l__pic_region_fill_bool && 
      \tl_if_empty_p:N \l__pic_region_fill_color_tl 
    }{ \tl_set:Nn \l__pic_region_fill_color_tl {#1} }
  }
\cs_new_protected:Npn \ztool_pic_draw:nw #1#2;
  {% #1:key-value; #2:coors list (use ';' to end scan just like tikz)
    \group_begin:
    \keys_set:nn { ztool / draw / picture / zdraw }{#1}
    \__region_fill_color_miss:n { gray }
    \edef\coors@first 
      {
        \exp_last_unbraced:Ne 
          \__coors_list_first:w {\tl_trim_spaces:e {#2}}
          \scan_stop:
      }
    \edef\draw@flag 
      {
        \tl_map_function:nN {
          \l__pic_draw_vector_bool
          \l__pic_draw_cycle_bool
          \l__pic_region_fill_bool
        } \int_eval:n 
      }
    \__@@_pic_put:nnn 
      { \__coor_st:V \coors@first + \__coor_st:V \l__pic_draw_shift_tl }
      { \__coor_nd:V \coors@first + \__coor_nd:V \l__pic_draw_shift_tl }
      {
        \__pic_set_line_width:
        \__pic_set_line_color:
        \exp_after:wN \int_case:nnF \exp_after:wN {
            \exp_after:wN \int_from_bin:n \exp_after:wN 
              { \draw@flag } 
          }{
            {0}{ \__@@_pic_polyline:n    {#2} }
            {1}{ \__@@_pic_polygon:nn {*}{#2} }
            {2}{ \__@@_pic_polygon:ne { }{#2} }
            {3}{ \__@@_pic_polygon:nn {*}{#2} }
            {4}{ \__@@_pic_polyvector:n  {#2} }
            {5}{ 
              \__pic_set_fill_color:
              \__@@_pic_polygon:nn {*}{#2}
              \__pic_set_line_color:
              \exp_args:Ne \__@@_pic_polyvector:n {#2(\coors@first)}  
            }
            {6}{ \exp_args:Ne \__@@_pic_polyvector:n {#2(\coors@first)} }
            {7}{ 
              \__pic_set_fill_color:
              \__@@_pic_polygon:nn {*}{#2}
              \__pic_set_line_color:
              \exp_args:Ne \__@@_pic_polyvector:n {#2(\coors@first)}  
            }
          }{\relax}
      }
    \group_end:
  }
\cs_new:Npn \__coors_list_first:w (#1)#2\scan_stop:
  { #1 }
\NewDocumentCommand{\zdraw}{O{}}
  { \ztool_pic_draw:nw {#1} }


% --> arc / circle
\cs_new:Npn \__@@_pic_arc:nnnn #1#2#3#4
  {% #1:fill bool; #2:start angle; #3:end angle; #4:radius
    \arc #1[\fp_eval:n {#2}, \fp_eval:n {#3}]
      { \fp_eval:n {#4} }
  }
\cs_new:Npn \__@@_pic_circel:nn #1#2
  {% #1:fill bool; #2:radius
    \__@@_pic_arc:nnnn {#1}{0}{360}{#2}
  }


% --> circle
\keys_define:nn { ztool / draw / picture } 
  {
    arc   .inherit:n   =    {
      ztool/draw/picture/line,
      ztool/draw/picture/region,
    },
  }
\keys_define:nn { ztool / draw / picture / arc }
  {
    radius .fp_set:N   = \l__pic_arc_radius_fp,
    radius .initial:n  = .5,
    start  .fp_set:N   = \l__pic_arc_start_fp,
    start  .initial:n  = 0,
    end    .fp_set:N   = \l__pic_arc_end_fp,
    end    .initial:n  = 90,
  }
\prg_generate_conditional_variant:Nnn 
  \bool_if:n { e } { p, T, F, TF }
\cs_new_protected:Npn \ztool_pic_arc:nn #1#2
  {% #1:key-value; #2:coor
    \group_begin:
    \keys_set:nn { ztool / draw / picture / arc }{#1}
    \__region_fill_color_miss:n { gray }
    \__color_if_valid:VF \l__pic_region_fill_color_tl
      { \bool_set_false:N \l__pic_region_fill_bool }
    \exp_last_unbraced:Ne \__@@_pic_put:nnn {\__coor_st_nd:n {#2}}
      {
        \__pic_set_line_width:
        \bool_if:eT \l__pic_region_fill_bool
          {
            \__pic_set_fill_color:
            \exp_args:Ne \__@@_pic_arc:nnnn {*}
              { \fp_use:N \l__pic_arc_start_fp  }
              { \fp_use:N \l__pic_arc_end_fp    }
              { \fp_use:N \l__pic_arc_radius_fp }
          }
        % NOTE: border must over the fill
        \__pic_set_line_color:
        \exp_args:Ne \__@@_pic_arc:nnnn {}
          { \fp_use:N \l__pic_arc_start_fp  }
          { \fp_use:N \l__pic_arc_end_fp    }
          { \fp_use:N \l__pic_arc_radius_fp }
      }
    \group_end:
  }
\NewDocumentCommand{\zarc}{O{}d()}
  {% #1:key-value; #2:coor
    \ztool_pic_arc:nn {#1}{#2}
  }
\NewDocumentCommand{\zcircle}{O{}d()}
  { 
    \ztool_pic_arc:nn {start=0, end=360, #1}{#2}
  }


% --> oval / rectangle
% \cs{oval}\oarg{arc}\parg{full-$x$-width, full-$y$-width}\oarg{part}
% part: (l, r) $\times$ (t, b) 
\cs_new:Npn \__@@_pic_oval:nnnn #1#2#3#4
  {% #1:arc; #2:part; #3:x-width; #4:y-width;
    \oval 
      [\fp_eval:n {#1}]
      (\fp_eval:n {#3}, \fp_eval:n {#4})
      [ #2 ]
  }
\keys_define:nn { ztool / draw / picture } 
  {
    rectangle   .inherit:n  =  {
      ztool/draw/picture/line,
      ztool/draw/picture/region,
    },
  }
\keys_define:nn { ztool / draw / picture / rectangle }
  {
    arc     .fp_set:N   = \l__pic_rec_arc_fp,
    arc     .initial:n  = 0, 
  }
\int_new:N \l__pic_rec_quadrant_index_int
\cs_new_protected:Npn \ztool_pic_rectangle:nnn #1#2#3
  {% #1:key-value; #2:start coor; #3:end coor;
    \group_begin:
    \keys_set:nn { ztool / draw / picture / rectangle }{ fill=false }
    \keys_set:nn { ztool / draw / picture / rectangle }{ #1 }
    \edef\rec@arc   { \fp_use:N  \l__pic_rec_arc_fp    }
    \edef\rec@width { \fp_eval:n {\__coor_st:n {#3} - \__coor_st:n {#2}} }
    \edef\rec@height{ \fp_eval:n {\__coor_nd:n {#3} - \__coor_nd:n {#2}} }
    \__region_fill_color_miss:n { gray }
    \__color_if_valid:VF \l__pic_region_fill_color_tl
      { 
        \bool_set_false:N \l__pic_region_fill_bool 
        \prg_map_break:Nn \l__ztool_pic_rec_fill {}
      }
    %% begin fill rounded rectangle
    \__@@_pic_put:nnn {\__coor_st:n {#2}}{\__coor_nd:n {#2}}
      {
        \__pic_set_fill_color:
        \rule
          {\fp_eval:n {\rec@width *\dim_to_decimal:n {\l__pic_unit_dim}}pt}
          {\fp_eval:n {\rec@height*\dim_to_decimal:n {\l__pic_unit_dim}}pt}
      }
    \int_set:Nn \l__pic_rec_quadrant_index_int { 0 }
    \tl_map_inline:nn 
      { 
        {\__coor_st:n {#2}+\rec@width-\rec@arc, \__coor_nd:n {#2}+\rec@height-\rec@arc} 
        {\__coor_st:n {#2}+\rec@arc,            \__coor_nd:n {#2}+\rec@height-\rec@arc} 
        {\__coor_st:n {#2}+\rec@arc,            \__coor_nd:n {#2}+\rec@arc} 
        {\__coor_st:n {#2}+\rec@width-\rec@arc, \__coor_nd:n {#2}+\rec@arc} 
      }{
        \int_incr:N \l__pic_rec_quadrant_index_int
        \edef\qu@drant@index{\int_use:N \l__pic_rec_quadrant_index_int}
        \exp_last_unbraced:Ne \__@@_pic_put:nnn {\__coor_st_nd:n {##1}}
          {
            \__color_safe_use:V \l__pic_opacity_color_tl 
            \__@@_pic_arc:nnnn {*}
              { (\qu@drant@index-1)*90 }
              { \qu@drant@index*90     }
              { sqrt(2)*\rec@arc       }
            \__pic_set_fill_color: 
            \__@@_pic_arc:nnnn {*}{0}{360}{\rec@arc}
          }
      }
    %% end fill rounded rectangle
    \prg_break_point:Nn \l__ztool_pic_rec_fill { }
    \__@@_pic_put:nnn {\__coor_st:n {#2}+\rec@width/2}{\__coor_nd:n {#2}+\rec@height/2}
      { 
        \__pic_set_line_color:
        \__pic_set_line_width:
        \__@@_pic_oval:nnnn 
          { \rec@arc }{ }
          { \rec@width  }
          { \rec@height }
      }
    \group_end:
  }
\NewDocumentCommand{\zrectangle}{O{}d()d()}
  {
    \ztool_pic_rectangle:nnn { #1 }{#2}{#3}
  }